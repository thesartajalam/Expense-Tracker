import axios from "axios";

const BACKEND_URL = "https://expense-tracker-course-app-default-rtdb.firebaseio.com";

// before using the unique ids of say names auto generated by firebase for the products stored in there
// export function storeExpense(expenseData) {
//   axios.post(BACKEND_URL + "/expenses.json", expenseData);
// }

export async function storeExpense(expenseData) {
  const response = await axios.post(BACKEND_URL + "/expenses.json", expenseData);
  const id = response.data.name;
  return id;
}

// export function fetchExpenses() {
//   axios.get(BACKEND_URL + "/expenses.json");
// }

export async function fetchExpenses() {
  const response = await axios.get(BACKEND_URL + "/expenses.json");

  const expenses = [];

  for(const key in response.data){
    const expenseObj = {
        id: key,
        amount: response.data[key].amount,
        // date: response.data[key].date,
        date: new Date(response.data[key].date),
        description: response.data[key].description
    };
    expenses.push(expenseObj);
  }
  return expenses;
// And this code will simply transform
// the data sent back from Firebase
// into an array of objects
// that have the format we want them to have.
}

// export async function updateExpense(id, expenseData){
export function updateExpense(id, expenseData){
// and target expenses slash and then the ID JSON.
// And ID of course should not be the word ID,
// but instead the actual ID we're getting,
// which we can inject into this string,
// into this template literal like this.
// Please note that we Use back ticks
// For creating such a template literal in JavaScript,
// not regular single quotes.

// So this will now send the request
// to /expenses/ the ID of a specific expense dot JSON.

  return axios.put(BACKEND_URL + `/expenses/${id}.json`, expenseData);
}

export function deleteExpense(id){
  return axios.delete(BACKEND_URL + `/expenses/${id}.json`);
}